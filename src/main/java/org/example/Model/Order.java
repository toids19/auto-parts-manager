/**
 * The Order class represents an order entity in the application.
 * It contains information about a user's order, including product details, quantity, total price, and creation timestamp.
 */
package org.example.Model;

import java.sql.Timestamp;

/**
 * A class representing an order entity.
 */
public class Order {
    private Long orderId; // ID of the order
    private Long userId; // ID of the user who made the order
    private Long productId; // ID of the product in the order
    private int quantity; // Quantity of the product in the order
    private double totalPrice; // Total price of the order
    private Timestamp createdAt; // Timestamp of when the order was created

    /**
     * Default constructor.
     */
    public Order() {
    }

    /**
     * Constructor with all fields.
     *
     * @param orderId     The ID of the order.
     * @param userId      The ID of the user who made the order.
     * @param productId   The ID of the product in the order.
     * @param quantity    The quantity of the product in the order.
     * @param totalPrice  The total price of the order.
     * @param createdAt   The timestamp of when the order was created.
     */
    public Order(Long orderId, Long userId, Long productId, int quantity, double totalPrice, Timestamp createdAt) {
        this.orderId = orderId;
        this.userId = userId;
        this.productId = productId;
        this.quantity = quantity;
        this.totalPrice = totalPrice;
        this.createdAt = createdAt;
    }

    /**
     * Constructor without orderId (useful for insertion where orderId is generated by the database).
     *
     * @param userId      The ID of the user who made the order.
     * @param productId   The ID of the product in the order.
     * @param quantity    The quantity of the product in the order.
     * @param totalPrice  The total price of the order.
     * @param createdAt   The timestamp of when the order was created.
     */
    public Order(Long userId, Long productId, int quantity, double totalPrice, Timestamp createdAt) {
        this.userId = userId;
        this.productId = productId;
        this.quantity = quantity;
        this.totalPrice = totalPrice;
        this.createdAt = createdAt;
    }

    /**
     * Provides a string representation of the Order object.
     *
     * @return A string representation of the Order object.
     */
    @Override
    public String toString() {
        return "Order{" +
                "orderId=" + orderId +
                ", userId=" + userId +
                ", productId=" + productId +
                ", quantity=" + quantity +
                ", totalPrice=" + totalPrice +
                ", createdAt=" + createdAt +
                '}';
    }

    /**
     * Retrieves the ID of the order.
     *
     * @return The ID of the order.
     */
    public Long getOrderId() {
        return orderId;
    }

    /**
     * Sets the ID of the order.
     *
     * @param orderId The ID of the order.
     */
    public void setOrderId(Long orderId) {
        this.orderId = orderId;
    }

    /**
     * Retrieves the ID of the user who made the order.
     *
     * @return The ID of the user who made the order.
     */
    public Long getUserId() {
        return userId;
    }

    /**
     * Sets the ID of the user who made the order.
     *
     * @param userId The ID of the user who made the order.
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * Retrieves the ID of the product in the order.
     *
     * @return The ID of the product in the order.
     */
    public Long getProductId() {
        return productId;
    }

    /**
     * Sets the ID of the product in the order.
     *
     * @param productId The ID of the product in the order.
     */
    public void setProductId(Long productId) {
        this.productId = productId;
    }

    /**
     * Retrieves the quantity of the product in the order.
     *
     * @return The quantity of the product in the order.
     */
    public int getQuantity() {
        return quantity;
    }

    /**
     * Sets the quantity of the product in the order.
     *
     * @param quantity The quantity of the product in the order.
     */
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    /**
     * Retrieves the total price of the order.
     *
     * @return The total price of the order.
     */
    public double getTotalPrice() {
        return totalPrice;
    }

    /**
     * Sets the total price of the order.
     *
     * @param totalPrice The total price of the order.
     */
    public void setTotalPrice(double totalPrice) {
        this.totalPrice = totalPrice;
    }

    /**
     * Retrieves the timestamp of when the order was created.
     *
     * @return The timestamp of when the order was created.
     */
    public Timestamp getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the timestamp of when the order was created.
     *
     * @param createdAt The timestamp of when the order was created.
     */
    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }
}
